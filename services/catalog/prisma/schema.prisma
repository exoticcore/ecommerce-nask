// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Brand {
  id                Int           @default(autoincrement()) @id
  slug              String        @unique
  title             String
  description       String?       @db.Text
  image_url         String?

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?
         
  products          Product[]
}

model Category {
  id                Int           @default(autoincrement()) @id
  slug              String        @unique
  image_url         String?

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  translate         CategoryTranslate[]
  subcat            SubCategory[]
}

model CategoryTranslate {
  id                Int           @id @default(autoincrement())
  locale            String
  title             String        
  description       String?

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  cat_id            Int
  category          Category      @relation(fields: [cat_id], references: [id])
}

model SubCategory {
  id                Int           @id @default(autoincrement())
  slug              String        @unique

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  translate         SubCategoryTranslate[]
  subcat_attr       SubCategoryAttribute[]

  cat_id            Int
  category          Category      @relation(fields: [cat_id], references: [id])
}

model SubCategoryTranslate {
  id                Int           @id @default(autoincrement())
  locale            String        
  title             String

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  subcat_id         Int
  subcat            SubCategory    @relation(fields: [subcat_id], references: [id])
}

model SubCategoryAttribute {
  id                Int           @id @default(autoincrement())
  slug              String        @unique

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  subcat_id         Int?
  subcat            SubCategory?   @relation(fields: [subcat_id], references: [id])

  product           Product[]
  translate         SubCategoryAttributeTranslate[]
}

model SubCategoryAttributeTranslate {
  id                Int           @id @default(autoincrement())
  locale            String        
  name              String

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  subcat_attr_id    Int           
  subcat_attr       SubCategoryAttribute  @relation(fields: [subcat_attr_id], references: [id])

  @@unique([locale, subcat_attr_id], name: "subCatAttrTranslateIndentifier")
}

model Product {
  id                Int           @default(autoincrement()) @id
  slug              String        @unique
  price             Decimal       @db.Decimal(10,2)
  s_price           Decimal?      @db.Decimal(10,2)
  s_price_start     DateTime?
  s_price_end       DateTime?
  discount          Decimal?      @db.Decimal(10,2)
  rating            Decimal?      @db.Decimal(2,1)
  image_url         String?
  is_active         Boolean       @default(true)
  publish_at        DateTime      @default(now())
  visibility        String        @default("public")

  created_by        String?       
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  brand_id          Int?           
  brand             Brand?         @relation(fields: [brand_id], references: [id])

  subcat_attr_id    Int
  subcat_attr       SubCategoryAttribute @relation(fields: [subcat_attr_id], references: [id])

  sku               SkuProduct[]
  translate         ProductTranslate[]
  media             ProductMedia[]
  wholesale         WholesaleProduct[]
  tag               ProductTag[]
}

model ProductTranslate {
  id                Int           @id @default(autoincrement())
  locale            String
  title             String
  information       String?       @db.Text
  description       String?       @db.Text

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  productId         Int           
  product           Product       @relation(fields: [productId], references: [id])

  @@unique([locale, productId], name: "productTranslateIdentifier")
}

model WholesaleProduct {
  id                Int           @id @default(autoincrement())
  from              Int           
  to                Int?           
  price             Decimal       @db.Decimal(10,2)

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  product_id        Int
  product           Product       @relation(fields: [product_id], references: [id])
}

model SkuProduct {
  id                Int           @id @default(autoincrement())
  sku               String        @unique
  stock             Int?
  is_stock          Boolean?      @default(true) 
  price             Decimal?      @db.Decimal(10,2)
  s_price           Decimal?      @db.Decimal(10,2)
  s_price_start     DateTime?
  s_price_end       DateTime?
  is_primary        Boolean       @default(false)
  is_active         Boolean       @default(true)
  image_url         String?

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  product_id        Int            
  product           Product       @relation(fields: [product_id], references: [id])

  product_option    ProductOption[]
  media             SKUMedia[]
}

model ProductMedia {
  id                Int           @id @default(autoincrement())
  image_url         String
  
  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  productId         Int
  product           Product       @relation(fields: [productId], references: [id])
}

model SKUMedia {
  id                Int           @id @default(autoincrement())
  image_url         String

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  sku_id            Int
  sku_product       SkuProduct    @relation(fields: [sku_id], references: [id])   
}

model ProductAttribute {
  id                  Int          @id @default(autoincrement())
  name                String
  type                String       @default("text")

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?
  
  translate           ProductAttributeTransalte[]
  product_attr_value  ProductAttributeValue[]
}

model ProductAttributeTransalte {
  id                  Int         @id @default(autoincrement())
  locale              String
  title               String
  description         String?

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?
  

  product_attr_id     Int
  product_attr        ProductAttribute @relation(fields: [product_attr_id], references: [id])

  @@unique([locale, product_attr_id], name: "productAttrTranslateIndentifier")
}

model ProductAttributeValue {
  id                  Int         @id @default(autoincrement())

  value               String
  more                String?

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  product_attr_id     Int
  product_attr        ProductAttribute @relation(fields: [product_attr_id], references: [id])

  product_option      ProductOption[]

  @@unique([value, product_attr_id], name: "productAttrValueIdentifier")
}

model ProductOption {
  id                  Int         @id @default(autoincrement())

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  product_attr_value_id Int
  product_attr_value    ProductAttributeValue @relation(fields: [product_attr_value_id], references: [id])
  
  sku_id                Int
  sku_product           SkuProduct  @relation(fields: [sku_id], references: [id])
}

model Tag {
  id                  Int           @id @default(autoincrement())

  title               String
  slug                String       @unique()

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  product_tag       ProductTag[]
}

model ProductTag {
  id                  Int            @id @default(autoincrement())

  created_at        DateTime      @default(now())
  updated_at        DateTime      @updatedAt @default(now())
  deleted_at        DateTime?

  tag_id            Int
  tag               Tag           @relation(fields: [tag_id], references: [id])

  product_id        Int
  product           Product       @relation(fields: [product_id], references: [id])
}
